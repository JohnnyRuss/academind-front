@use "../variables/variables" as *;
@use "../abstract/functions" as *;
@use "../abstract/animation" as *;

@mixin notificationsModal {
  right: 2rem;
  width: 30rem;
  min-height: 10rem;
  max-height: 50rem;
  padding: 0.5rem;
  gap: 0.25rem;
  font-size: size("smallerSize");
  border-bottom-left-radius: 0.75rem;
  border-bottom-right-radius: 0.75rem;
  background: color("whiteColor");
  box-shadow: $shadow-base-v-lg;
  animation: moveBottom 0.2s forwards;

  .cleanerBtnsBox {
    margin: 0.75rem 0;
    text-transform: capitalize;
    color: color("blueColor");

    & button:hover {
      text-decoration: underline;
    }
  }

  .message {
    padding: 1rem;
    text-align: center;
    text-transform: capitalize;
    color: color("darkLightGreyColor");
  }
}

@mixin notificationItem {
  gap: 0.75rem;
  padding: 0.5rem;
  border-radius: $rounded-sm;
  transition: all 0.2s;

  &.unRead {
    background: color(blueTintColor);
  }

  &:not(.unRead):hover {
    background: color(whiteShadeColor);
  }

  .notifyFig {
    min-width: 4rem;
    max-width: 4rem;
    aspect-ratio: 1/1;
    border-radius: 50%;
  }

  .notifyTime {
    font-size: size(smallestSize);
  }

  .notifyOptBtn {
    font-size: size(regullarSize);
  }
}

@mixin notificationOptionsList {
  right: 0;
  top: 1.5rem;
  width: 13rem;
  padding: 0.5rem;
  gap: 0.25rem;
  border-radius: $rounded-xsm;
  text-transform: capitalize;
  background: color(whiteColor);
  color: color(darkLightGreyColor);
  box-shadow: $shadow-base-v;
  animation: moveTop 0.2s forwards;

  & button {
    gap: 0.35rem;
    transition: all 0.2s;

    & svg {
      font-size: size("regullarSize");
    }

    &:hover {
      color: color("darkGreyColor");
    }

    &:last-child:hover {
      color: color("redColor");
    }
  }
}
