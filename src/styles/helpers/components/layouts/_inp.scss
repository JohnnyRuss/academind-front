@use "../../abstract/functions" as *;
@use "../../abstract/mixins" as *;

@mixin fieldContainer {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

@mixin label {
  font-weight: weight("mediumWeight");
  font-size: size("smallSize");
  text-transform: capitalize;
  cursor: pointer;
}

@mixin inpPlaceHolder {
  text-transform: capitalize;
  font-size: size("smallerSize");
  opacity: 0.5;
}

$inp-h: 4rem;

@mixin inp {
  // may be actual input or box in which input is placed
  .inpField {
    @include flexBox;
    border: 1px solid color("darkGreyColor");
    border-radius: 0.3rem;
    overflow: hidden;
    background: color("whiteColor");

    &.error {
      border: 1px solid color("redColor");
    }
  }

  // is actual input
  .inp {
    display: inline-block;
    width: 100%;
    outline: none;
    height: $inp-h;
    color: color("blackColor");
    padding: 0 1rem;
    font-size: size("smallSize");
    border: none;

    &::placeholder {
      @include inpPlaceHolder();
    }
  }

  .inpField.inp {
    border: 1px solid color("darkGreyColor");
  }
}

@mixin errMsg {
  color: color("redColor");
  font-size: size("smallerSize");
  text-align: center;

  &::first-letter {
    text-transform: capitalize;
  }
}

@mixin inpField {
  @include fieldContainer;

  @include inp;

  .iconBox {
    width: 3rem;
    @include flexBox;
    @include flexProperty(center, center);
    cursor: pointer;
    border: none;
    background: inherit;

    svg{
      font-size: 2.2rem;
    }
  }

  .inpLabel {
    @include label;
  }

  .inpErrMsg {
    @include errMsg;
  }
}
