@use "../../../styles/helpers/abstract/mixins" as *;
@use "../../../styles/helpers/abstract/functions" as *;
@use "../../../styles/helpers/abstract/animation" as *;
@use "../../../styles/helpers/abstract/components" as *;

.selection {
  $border-w: 1px;

  position: relative;
  display: inline-block;
  width: 15rem;
  padding: 0.5rem;
  border-radius: 0.5rem;
  border: $border-w solid color("darkGreyColor");
  background: color("whiteColor");
  color: color("blackColor");

  &.active {
    border-bottom: none;
  }

  &.active .selectDefault,
  &.active {
    border-bottom-left-radius: 0rem;
    border-bottom-right-radius: 0rem;
  }

  .selectDefault {
    width: 100%;
    height: 100%;
    @include flexBox;
    @include flexProperty(space-between, center);
    font-size: size("smallSize");
    text-transform: capitalize;
    border-radius: inherit;

    & svg {
      font-size: size("regullarSize");
    }

    .default {
      opacity: 0.5;
    }
  }

  .selectionList {
    position: absolute;
    top: 100;
    left: -$border-w;
    right: -$border-w;
    z-index: 1;
    @include flexBox(column);
    gap: 0.5rem;
    padding: 0.5rem;
    padding-top: 1rem;
    max-height: 15rem;
    overflow: auto;
    background: inherit;

    border-bottom-left-radius: 0.5rem;
    border-bottom-right-radius: 0.5rem;
    border: $border-w solid color("darkGreyColor");
    border-top: 0;
    box-sizing: content-box;
    @include animateMoveBottom(0.2s, -2rem);

    @include scrollBar("&", 1rem, 1rem, 1rem);

    & li {
      cursor: pointer;
      transition: all 0.2s ease;

      &:hover {
        color: color("blueColor");
      }
    }
  }
}
